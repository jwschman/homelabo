apiVersion: apps/v1
kind: Deployment
metadata:
  name: linkwarden
  namespace: linkwarden
spec:
  revisionHistoryLimit: 5
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: linkwarden
  template:
    metadata:
      labels:
        app: linkwarden
    spec:
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.37
        command: ['sh', '-c', 'until nc -z postgres 5432; do echo "Waiting for Postgres..."; sleep 2; done']
      containers:
      - name: linkwarden
        image: ghcr.io/linkwarden/linkwarden:v2.10.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        envFrom:
        - secretRef:
            name: linkwarden-secrets
        env:
        - name: NEXTAUTH_URL
          value: https://linkwarden.pawked.com/api/v1/auth
        - name: DISABLE_SIGNUP
          value: "true"
        - name: NEXT_PUBLIC_AUTHENTIK_ENABLED
          value: "true"
        - name: AUTHENTIK_CUSTOM_NAME
          value: authentik
        - name: AUTHENTIK_ISSUER
          value: https://auth.pawked.com/application/o/linkwarden
        volumeMounts:
        - name: data
          mountPath: /data/data
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3
          successThreshold: 1
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: linkwarden-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: linkwarden
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:16-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: linkwarden-secrets
              key: POSTGRES_PASSWORD
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: pgdata
          mountPath: /var/lib/postgresql/data
        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - pg_isready -U postgres
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: linkwarden-postgres
